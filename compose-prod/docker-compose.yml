services:
    app:
        build:
            context: ../app
            dockerfile: DockerfileProd
        container_name: transcendence_node_app
        volumes:
            - db-data:/data
        environment:
            - DB_PATH=/data/db.sqlite
        env_file:
            - .env
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
            interval: 5s
            timeout: 2s
            retries: 10

    nginx:
        image: nginx:1.28
        container_name: nginx
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
            - ./grafana.conf:/etc/nginx/conf.d/grafana.conf
            - ./prometheus.conf:/etc/nginx/conf.d/prometheus.conf
            - nginx-ssl:/etc/ssl
        depends_on:
            - app
        ports:
            - "80:80"
            - "443:443"
            - "4000:4000"
            - "9090:9090"
        command: |
            bash -c "if [ ! -f /etc/ssl/nginx.key ] || [ ! -f /etc/ssl/nginx.crt ]; then \
                openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/nginx.key -out /etc/ssl/nginx.crt -subj '/CN=localhost'; \
            fi && nginx -g 'daemon off;'"

    prometheus:
        image: prom/prometheus:v3.3.0
        container_name: prometheus
        volumes:
            - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - ../monitoring/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
            - prometheus-data:/prometheus
        restart: unless-stopped
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.retention.time=90d" # Retain time-series data for 90 days before automatic deletion to manage storage usage.
            - "--storage.tsdb.path=/prometheus" #Specify the directory where Prometheus stores its time-series database.

    alertmanager:
        image: prom/alertmanager:v0.28.0
        container_name: alertmanager
        volumes:
            - ../monitoring/alertmanager:/etc/alertmanager
        command:
            - "--config.file=/etc/alertmanager/alertmanager.yml"
        ports:
            - "9093:9093"
        restart: unless-stopped

    grafana:
        image: grafana/grafana:11.6.1
        container_name: grafana
        volumes:
            - grafana-data:/var/lib/grafana
            - ../monitoring/grafana/provisioning:/etc/grafana/provisioning
        restart: unless-stopped
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}

    node-exporter:
        image: prom/node-exporter:v1.9.1
        container_name: node_exporter
        restart: unless-stopped

volumes:
    db-data:
    nginx-ssl:
    prometheus-data:
    grafana-data:
